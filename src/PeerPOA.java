
/**
* PeerPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Peer.idl
* domingo 15 de mayo de 2022 08:23:28 PM CDT
*/

public abstract class PeerPOA extends org.omg.PortableServer.Servant
 implements PeerOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("enviar_Mensaje", new java.lang.Integer (0));
    _methods.put ("actualizar_Lista_Peers", new java.lang.Integer (1));
    _methods.put ("updateCoor", new java.lang.Integer (2));
    _methods.put ("startElection", new java.lang.Integer (3));
    _methods.put ("sendOk", new java.lang.Integer (4));
    _methods.put ("iWon", new java.lang.Integer (5));
    _methods.put ("isalive", new java.lang.Integer (6));
    _methods.put ("getCoordinator", new java.lang.Integer (7));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // Peer/enviar_Mensaje
       {
         String mensaje = in.read_string ();
         this.enviar_Mensaje (mensaje);
         out = $rh.createReply();
         break;
       }

       case 1:  // Peer/actualizar_Lista_Peers
       {
         String peers = in.read_string ();
         this.actualizar_Lista_Peers (peers);
         out = $rh.createReply();
         break;
       }

       case 2:  // Peer/updateCoor
       {
         String coor = in.read_string ();
         this.updateCoor (coor);
         out = $rh.createReply();
         break;
       }

       case 3:  // Peer/startElection
       {
         String nodeId = in.read_string ();
         String id = in.read_string ();
         this.startElection (nodeId, id);
         out = $rh.createReply();
         break;
       }

       case 4:  // Peer/sendOk
       {
         String where = in.read_string ();
         String to = in.read_string ();
         this.sendOk (where, to);
         out = $rh.createReply();
         break;
       }

       case 5:  // Peer/iWon
       {
         String node = in.read_string ();
         this.iWon (node);
         out = $rh.createReply();
         break;
       }

       case 6:  // Peer/isalive
       {
         boolean $result = false;
         $result = this.isalive ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 7:  // Peer/getCoordinator
       {
         String $result = null;
         $result = this.getCoordinator ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:Peer:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Peer _this() 
  {
    return PeerHelper.narrow(
    super._this_object());
  }

  public Peer _this(org.omg.CORBA.ORB orb) 
  {
    return PeerHelper.narrow(
    super._this_object(orb));
  }


} // class PeerPOA
